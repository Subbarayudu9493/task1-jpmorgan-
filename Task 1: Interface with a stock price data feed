import json
import random
import urllib.request

# Server API URLs
QUERY = "http://localhost:8080/query?id={}"

# 500 server requests
N = 500


def getDataPoint(quote):
    """ Produce all the needed values to generate a datapoint """
    stock = quote['stock']
    bid_price = float(quote['top_bid']['price'])
    ask_price = float(quote['top_ask']['price'])
    price = (bid_price + ask_price) / 2  # Calculate average of bid and ask prices
    return stock, bid_price, ask_price, price


def getRatio(price_a, price_b):
    """ Get ratio of price_a and price_b """
    if price_b == 0:
        return "Price B is 0, cannot calculate ratio"
    else:
        return price_a / price_b


# Main
if __name__ == "__main__":
    # Query the price once every N seconds.
    for _ in range(N):
        quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())

        # Store the data points for each stock
        data_points = []

        # Iterate through quotes to get data points
        for quote in quotes:
            stock, bid_price, ask_price, price = getDataPoint(quote)
            data_points.append((stock, price))  # Store stock name and its price

            print("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))

        # Ensure we have data for at least two stocks
        if len(data_points) < 2:
            print("Insufficient data to calculate ratio.")
            continue

        # Get two random stocks
        stock_a, price_a = random.choice(data_points)
        stock_b, price_b = random.choice(data_points)

        # Calculate and print ratio
        ratio = getRatio(price_a, price_b)
        print("Ratio of {} to {}: {:.2f}".format(stock_a, stock_b, ratio))
